vamos a classe Conexao que estabelecerá a conexão entre o php e o mySQL utilizando nesse processo o PDO

1. criamos o script conexao.php no diretório app_lista_de_tarefas fora de htdocs

2. criamos a classe Conexao e definimos a function conectar(){} dentro da classe

3. em seguida precisamos criar atributos que servirão de parâmetro para a nossa função conectar()
isso é necessário para estabelecer a conexão com o Banco de Dados

    private $host = 'localhost';
    private $dbname = 'php_com_pdo';
    private $user = 'root';
    private $pass = '';

4. criamos o try/catch dentro da função e usamos o PDOException para lidar com exceções no bloco 'catch'
fazemos isso através do método getMessage()

5. atribuimos uma instância do objeto PDO à variável $conexao
o PDO é nativo desde o PHP5.1, portanto, é possível criar objetos PDO nativamente com new PDO

6. pra instanciar o objeto PDO, é necessário passar 3 parâmetros para o construtor dessa classe
    o dsn, o usuário e a senha

7. recuperamos os atributos user e pass com o operador $this
Obs: o $this faz o ajuste de contexto, logo, ao usa-lo, queremos dizer que estamos utilizando atributos do 
próprio objeto

8.o dsn é composto de 3 informações: o driver, o host e o dbname
compomos então o dsn intercalando texto com atributos da classe Conexao acessados com $this
logo...

"mysql:host=localhost;dbname=php_com_pdo"  ==  "mysql:host=$this->host;dbname=$this->dbname"


9. por fim precisamos retornar essa conexao quando o método conectar() do objeto Conexão for chamado


class Conexao{

    private $host = 'localhost';
    private $dbname = 'php_com_pdo';
    private $user = 'root';
    private $pass = '';

    public function conectar() {
        try {
            $conexao = new PDO(
                "mysql:host=$this->host;dbname=$this->dbname",
                "$this->user",
                "$this->pass"
            );

            
            return $conexao;


        } catch (PDOException $e)  {
            echo '<p>' . $e->getMessage() . '</p>';
        }

    }

}


